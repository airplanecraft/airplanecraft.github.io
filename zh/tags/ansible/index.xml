<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ansible on 飞机模型</title>
    <link>https://www.airplanecraft.com/zh/tags/ansible/</link>
    <description>Recent content in Ansible on 飞机模型</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 29 May 2020 12:40:37 +0800</lastBuildDate>
    <atom:link href="https://www.airplanecraft.com/zh/tags/ansible/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用terraform创建阿里ecs用ansible完成主机配置</title>
      <link>https://www.airplanecraft.com/zh/posts/alicloud-terraform-create-ecs-ansible-provision/</link>
      <pubDate>Fri, 29 May 2020 12:40:37 +0800</pubDate>
      <guid>https://www.airplanecraft.com/zh/posts/alicloud-terraform-create-ecs-ansible-provision/</guid>
      <description>&lt;h2 id=&#34;使用terraform创建ecs用ansible完成ecs的provision&#34;&gt;使用terraform创建ecs用ansible完成ecs的provision&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;本文目标就是是用terraform创建ecs包括security group,disk,vpc,vswtich,然后用ansible来初始化和配置创建好的ecs&lt;/li&gt;&#xA;&lt;li&gt;本文只是创建了一个单机ecs，后续的文章会有load balance出现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;terrorm-创建ecs&#34;&gt;terrorm 创建ecs&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;什么是terraform&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;terraform是云工具，也就是针对云平台的&lt;/li&gt;&#xA;&lt;li&gt;terraform是在云平台上管理资源的，就是一个云资源编排工具&lt;/li&gt;&#xA;&lt;li&gt;terraform目标是&amp;quot;Write, Plan, and create Infrastructure as Code&amp;quot;, 基础架构即代码。具体的说就是可以用代码来管理维护 IT 资源，把之前需要手动操作的一部分任务通过程序来自动化的完成，这样的做的结果非常明显：高效、不易出错。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Terraform 核心功能&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;基础架构即代码(Infrastructure as Code)&lt;/li&gt;&#xA;&lt;li&gt;执行计划(Execution Plans)&lt;/li&gt;&#xA;&lt;li&gt;资源图(Resource Graph)&lt;/li&gt;&#xA;&lt;li&gt;自动化变更(Change Automation)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;terraform安装&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;下载https://www.terraform.io/downloads.html&lt;/li&gt;&#xA;&lt;li&gt;设置环境变量（省略）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;创建terraform 配置文件&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;main.tf&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;     provider &amp;#34;alicloud&amp;#34; {&#xA;     access_key = &amp;#34;xxx&amp;#34;&#xA;     secret_key = &amp;#34;xxx&amp;#34;&#xA;     region     = &amp;#34;ap-southeast-1&amp;#34;&#xA;     #version    = &amp;#34;~&amp;gt; 1.5.0&amp;#34;&#xA;     }&#xA;     data &amp;#34;alicloud_instance_types&amp;#34; &amp;#34;instance_type&amp;#34; {&#xA;     instance_type_family = &amp;#34;ecs.n1&amp;#34;&#xA;     cpu_core_count       = &amp;#34;1&amp;#34;&#xA;     memory_size          = &amp;#34;2&amp;#34;&#xA;     }&#xA;&#xA;     resource &amp;#34;alicloud_security_group&amp;#34; &amp;#34;group&amp;#34; {&#xA;     name        = var.short_name&#xA;     description = &amp;#34;New security group&amp;#34;&#xA;     vpc_id      = alicloud_vpc.vpc.id&#xA;     }&#xA;&#xA;     resource &amp;#34;alicloud_key_pair&amp;#34; &amp;#34;alicloud_key_pair&amp;#34; {&#xA;     key_name   = &amp;#34;terraform_test&amp;#34;&#xA;     public_key = &amp;#34;${file(var.ssh_key_public)}&amp;#34;&#xA;     }&#xA;     resource &amp;#34;alicloud_security_group_rule&amp;#34; &amp;#34;allow_http_80&amp;#34; {&#xA;     type              = &amp;#34;ingress&amp;#34;&#xA;     ip_protocol       = &amp;#34;tcp&amp;#34;&#xA;     nic_type          = var.nic_type&#xA;     policy            = &amp;#34;accept&amp;#34;&#xA;     port_range        = &amp;#34;80/80&amp;#34;&#xA;     priority          = 1&#xA;     security_group_id = alicloud_security_group.group.id&#xA;     cidr_ip           = &amp;#34;0.0.0.0/0&amp;#34;&#xA;     }&#xA;&#xA;     resource &amp;#34;alicloud_security_group_rule&amp;#34; &amp;#34;allow_https_443&amp;#34; {&#xA;     type              = &amp;#34;ingress&amp;#34;&#xA;     ip_protocol       = &amp;#34;tcp&amp;#34;&#xA;     nic_type          = var.nic_type&#xA;     policy            = &amp;#34;accept&amp;#34;&#xA;     port_range        = &amp;#34;443/443&amp;#34;&#xA;     priority          = 1&#xA;     security_group_id = alicloud_security_group.group.id&#xA;     cidr_ip           = &amp;#34;0.0.0.0/0&amp;#34;&#xA;     }&#xA;     resource &amp;#34;alicloud_security_group_rule&amp;#34; &amp;#34;allow_ssh_22&amp;#34; {&#xA;     type              = &amp;#34;ingress&amp;#34;&#xA;     ip_protocol       = &amp;#34;tcp&amp;#34;&#xA;     nic_type          = var.nic_type&#xA;     policy            = &amp;#34;accept&amp;#34;&#xA;     port_range        = &amp;#34;22/22&amp;#34;&#xA;     priority          = 1&#xA;     security_group_id = alicloud_security_group.group.id&#xA;     cidr_ip           = &amp;#34;0.0.0.0/0&amp;#34;&#xA;     }&#xA;&#xA;&#xA;     resource &amp;#34;alicloud_disk&amp;#34; &amp;#34;disk&amp;#34; {&#xA;     availability_zone = alicloud_instance.instance[0].availability_zone&#xA;     category          = var.disk_category&#xA;     size              = var.disk_size&#xA;     count             = var.number&#xA;     }&#xA;&#xA;     resource &amp;#34;alicloud_vpc&amp;#34; &amp;#34;vpc&amp;#34; {&#xA;     cidr_block = &amp;#34;172.16.0.0/12&amp;#34;&#xA;     }&#xA;&#xA;     data &amp;#34;alicloud_zones&amp;#34; &amp;#34;zones_ds&amp;#34; {&#xA;     available_instance_type = data.alicloud_instance_types.instance_type.instance_types[0].id&#xA;     }&#xA;&#xA;     resource &amp;#34;alicloud_vswitch&amp;#34; &amp;#34;vswitch&amp;#34; {&#xA;     vpc_id            = alicloud_vpc.vpc.id&#xA;     cidr_block        = &amp;#34;172.16.0.0/24&amp;#34;&#xA;     availability_zone = data.alicloud_zones.zones_ds.zones[0].id&#xA;     }&#xA;     resource &amp;#34;alicloud_instance&amp;#34; &amp;#34;instance&amp;#34; {&#xA;     instance_name   = &amp;#34;${var.short_name}-${var.role}-${format(var.count_format, count.index + 1)}&amp;#34;&#xA;     host_name       = &amp;#34;${var.short_name}-${var.role}-${format(var.count_format, count.index + 1)}&amp;#34;&#xA;     image_id        = var.image_id&#xA;     instance_type   = data.alicloud_instance_types.instance_type.instance_types[0].id&#xA;     count           = var.number&#xA;     security_groups = alicloud_security_group.group.*.id&#xA;     vswitch_id      = alicloud_vswitch.vswitch.id&#xA;&#xA;     internet_charge_type       = var.internet_charge_type&#xA;     internet_max_bandwidth_out = var.internet_max_bandwidth_out&#xA;&#xA;     password = var.ecs_password&#xA;&#xA;     instance_charge_type          = &amp;#34;PostPaid&amp;#34;&#xA;     system_disk_category          = &amp;#34;cloud_efficiency&amp;#34;&#xA;     security_enhancement_strategy = &amp;#34;Deactive&amp;#34;&#xA;     key_name = alicloud_key_pair.alicloud_key_pair.key_name&#xA;     data_disks {&#xA;         name        = &amp;#34;disk1&amp;#34;&#xA;         size        = &amp;#34;20&amp;#34;&#xA;         category    = &amp;#34;cloud_efficiency&amp;#34;&#xA;         description = &amp;#34;disk1&amp;#34;&#xA;     }&#xA;     tags = {&#xA;         role = var.role&#xA;         dc   = var.datacenter&#xA;     }&#xA;&#xA;     resource &amp;#34;alicloud_disk_attachment&amp;#34; &amp;#34;instance-attachment&amp;#34; {&#xA;     count       = var.number&#xA;     disk_id     = alicloud_disk.disk.*.id[count.index]&#xA;     instance_id = alicloud_instance.instance.*.id[count.index]&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;outputs.tf&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; output &amp;#34;hostname_list&amp;#34; {&#xA; value = join(&amp;#34;,&amp;#34;, alicloud_instance.instance.*.instance_name)&#xA; }&#xA;&#xA; output &amp;#34;ecs_ids&amp;#34; {&#xA; value = join(&amp;#34;,&amp;#34;, alicloud_instance.instance.*.id)&#xA; }&#xA;&#xA; output &amp;#34;ecs_public_ip&amp;#34; {&#xA; value = join(&amp;#34;,&amp;#34;, alicloud_instance.instance.*.public_ip)&#xA; }&#xA;&#xA; output &amp;#34;tags&amp;#34; {&#xA; value = jsonencode(alicloud_instance.instance.*.tags)&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;variables.tf&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; variable &amp;#34;number&amp;#34; {&#xA; default = &amp;#34;1&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;count_format&amp;#34; {&#xA; default = &amp;#34;%02d&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;image_id&amp;#34; {&#xA; default = &amp;#34;ubuntu_18_04_64_20G_alibase_20190624.vhd&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;role&amp;#34; {&#xA; default = &amp;#34;work&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;datacenter&amp;#34; {&#xA; default = &amp;#34;beijing&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;short_name&amp;#34; {&#xA; default = &amp;#34;hi&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;ecs_type&amp;#34; {&#xA; default = &amp;#34;ecs.n4.small&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;ecs_password&amp;#34; {&#xA; default = &amp;#34;Test12345&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;internet_charge_type&amp;#34; {&#xA; default = &amp;#34;PayByTraffic&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;internet_max_bandwidth_out&amp;#34; {&#xA; default = 5&#xA; }&#xA;&#xA; variable &amp;#34;disk_category&amp;#34; {&#xA; default = &amp;#34;cloud_efficiency&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;disk_size&amp;#34; {&#xA; default = &amp;#34;40&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;nic_type&amp;#34; {&#xA; default = &amp;#34;intranet&amp;#34;&#xA; }&#xA; variable &amp;#34;ssh_key_public&amp;#34; {&#xA; default     = &amp;#34;~/.ssh/id_rsa.pub&amp;#34;&#xA; description = &amp;#34;Path to the SSH public key for accessing cloud instances. Used for creating AWS keypair.&amp;#34;&#xA; }&#xA;&#xA; variable &amp;#34;ssh_key_private&amp;#34; {&#xA; default     = &amp;#34;~/.ssh/id_rsa&amp;#34;&#xA; description = &amp;#34;Path to the SSH public key for accessing cloud instances. Used for creating AWS keypair.&amp;#34;&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;versions.tf&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; terraform {&#xA; required_version = &amp;#34;&amp;gt;= 0.12&amp;#34;&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;用ansible部署docker容器&#34;&gt;用ansible部署docker容器&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ansible介绍&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用ansible在多台客户机安装docker</title>
      <link>https://www.airplanecraft.com/zh/posts/ansible-deploy-docker-container/</link>
      <pubDate>Fri, 22 May 2020 12:40:37 +0800</pubDate>
      <guid>https://www.airplanecraft.com/zh/posts/ansible-deploy-docker-container/</guid>
      <description>&lt;h2 id=&#34;install-ansible-on-server&#34;&gt;Install ansible on server&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ansible是一个开源配置管理工具，可以使用它来自动化任务，部署应用程序实现IT基础架构。Ansible可以用来自动化日常任务，比如，服务器的初始化配置、安全基线配置、更新和打补丁系统，安装软件包等&lt;/li&gt;&#xA;&lt;li&gt;Ansible包括控制节点（Control node）也叫主机，受控节点（Managed nodes）也叫客户机,只在控制节点安装就好了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ansible-优点&#34;&gt;ansible 优点&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;只需要在主机上安装ansible软件，客户机不需要安装&lt;/li&gt;&#xA;&lt;li&gt;通讯协议SSH协议和SFTP&lt;/li&gt;&#xA;&lt;li&gt;可并行执行程序，默认情况下，forks值为5，可以按需，在配置文件中增大该值&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ansiblecentos安装和配置&#34;&gt;ansible(centos)安装和配置&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;yum install ansible&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;为了使Ansible与客户端通信，需要使用用户帐户配置管理机和客户机。为了方便快捷安全，一般会配置证书方式连接客户机&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh-keygen&#xA;ssh-copy-id ansible@node ip&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;使用ad-hoc-在客户执行命令相当于命令行&#34;&gt;使用ad-hoc 在客户执行命令，相当于命令行&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/etc/ansible/hosts,最好谨慎使用hosts配置，安全问题需要解决&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[docker]&#xA;&#xA; 192.168.25.173 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=&amp;#34;xxx&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;执行以下ping,命令里面的docker对应的上面文件的docker&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ansible docker -m ping&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用ad-hoc命令管理软件包,安装&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ansible docker -m yum -a &amp;#34;name=docker state=present&amp;#34; -b&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用ad-hoc命令管理软件包,设置默认启动&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ansible docker -b -m service -a &amp;#34;name=docker  enabled=yes&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用ad-hoc命令管理软件包,启动&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ansible docker -b -m service -a &amp;#34;name=httpd state=started&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;使用ansible-playbook-部署docker&#34;&gt;使用ansible-playbook 部署docker&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;test-ansile.yml 文件内容&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  ---&#xA;  - hosts: docker&#xA;  remote_user: docker&#xA;  become: yes&#xA;  become_method: sudo&#xA;  vars:&#xA;      container_name: &amp;#34;robotic&amp;#34;&#xA;      container_image: &amp;#34;test-prod:{{container_version}}&amp;#34;&#xA;      registry_url: &amp;#34;ecr.test.amazonaws.com&amp;#34;&#xA;      working_dir: &amp;#34;/data/docker_test&amp;#34;&#xA;&#xA;  tasks:&#xA;      - name: remove container&#xA;      docker_container:&#xA;          name: &amp;#34;{{ container_name }}&amp;#34;&#xA;          state: absent&#xA;&#xA;      - name: install aws cli&#xA;      shell: |&#xA;          yum install awscli -y&#xA;      - name: rm config&#xA;      shell: |&#xA;          rm -rf /root/.aws;mkdir /root/.aws&#xA;      - name: create config for aws user&#xA;      shell: |&#xA;          echo &amp;#34;[profile ecr]&amp;#34; &amp;gt;&amp;gt;/root/.aws/config&#xA;          echo &amp;#34;region = ap-southeast-1&amp;#34; &amp;gt;&amp;gt;/root/.aws/config&#xA;      - name: create credential&#xA;      shell: |&#xA;          echo &amp;#34;[ecr]&amp;#34; &amp;gt;&amp;gt;/root/.aws/credentials&#xA;          echo &amp;#34;aws_access_key_id = xxx&amp;#34;  &amp;gt;&amp;gt;/root/.aws/credentials&#xA;          echo &amp;#34;aws_secret_access_key = xxx&amp;#34;  &amp;gt;&amp;gt;/root/.aws/credentials&#xA;      - name: docker login&#xA;      shell: |&#xA;          loginstr=`aws ecr get-login --no-include-email --profile ecr`&#xA;          bash $loginstr&#xA;      - name: create working_dir directory&#xA;      file:&#xA;          path: &amp;#34;{{ item }}&amp;#34;&#xA;          state: directory&#xA;      with_items:&#xA;          - &amp;#34;{{ working_dir }}&amp;#34;&#xA;&#xA;      - name: create container&#xA;      docker_container:&#xA;          name: &amp;#34;{{ container_name }}&amp;#34;&#xA;          image: &amp;#34;{{registry_url}}/{{ container_image }}&amp;#34;&#xA;          privileged: yes&#xA;          restart_policy: always&#xA;          ports:&#xA;          - &amp;#34;80:80&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;执行ansible文件&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible简介</title>
      <link>https://www.airplanecraft.com/zh/posts/ansible-devops-tools/</link>
      <pubDate>Mon, 06 Mar 2017 11:40:00 +0800</pubDate>
      <guid>https://www.airplanecraft.com/zh/posts/ansible-devops-tools/</guid>
      <description>&lt;h2 id=&#34;ansible-简介&#34;&gt;Ansible 简介&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt; ansible是基于Python开发，集合了众多运维工具（puppet、chef）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。最大的特点就是ansible不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。ansible目前已经已经被红帽官方收购，是自动化运维工具中大家认可度最高的，并且上手容易，学习简单。是每位运维工程师必须掌握的技能之一。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;特点&#34;&gt;特点&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;部署简单，只需在主控端部署Ansible环境，被控端无需做任何操作；&lt;/li&gt;&#xA;&lt;li&gt;默认使用SSH协议对设备进行管理；&lt;/li&gt;&#xA;&lt;li&gt;有大量常规运维操作模块，可实现日常绝大部分操作；&lt;/li&gt;&#xA;&lt;li&gt;配置简单、功能强大、扩展性强；&lt;/li&gt;&#xA;&lt;li&gt;支持API及自定义模块，可通过Python轻松扩展；&lt;/li&gt;&#xA;&lt;li&gt;通过Playbooks来定制强大的配置、状态管理；&lt;/li&gt;&#xA;&lt;li&gt;轻量级，无需在客户端安装agent，更新时，只需在操作机上进行一次更新即可；&lt;/li&gt;&#xA;&lt;li&gt;提供一个功能强大、操作性强的Web管理界面和REST API接口——AWX平台。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;任务执行方式&#34;&gt;任务执行方式&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ad-hoc模式(点对点模式)&lt;/p&gt;&#xA;&lt;p&gt;使用单个模块，支持批量执行单条命令。ad-hoc 命令是一种可以快速输入的命令，而且不需要保存起来的命令。就相当于bash中的一句话shell。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;playbook模式&lt;/p&gt;&#xA;&lt;p&gt;是Ansible主要管理方式，也是Ansible功能强大的关键所在。playbook通过多个task集合完成一类功能.比如我们拷贝一个文件到主机，然后授予权限，然后启动程序这几个步骤结合在一起&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;aansbile-文件和命令&#34;&gt;Aansbile 文件和命令&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ansible.cfg&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  inventory = /etc/ansible/hosts&#x9;&#x9;#这个参数表示资源清单inventory文件的位置&#xA;&#x9;library = /usr/share/ansible&#x9;&#x9;#指向存放Ansible模块的目录，支持多个目录方式，只要用冒号（：）隔开就可以&#xA;&#x9;forks = 5&#x9;&#x9;#并发连接数，默认为5&#xA;&#x9;sudo_user = root&#x9;&#x9;#设置默认执行命令的用户&#xA;&#x9;remote_port = 22&#x9;&#x9;#指定连接被管节点的管理端口，默认为22端口，建议修改，能够更加安全&#xA;&#x9;host_key_checking = False&#x9;&#x9;#设置是否检查SSH主机的密钥，值为True/False。关闭后第一次连接不会提示配置实例&#xA;&#x9;timeout = 60&#x9;&#x9;#设置SSH连接的超时时间，单位为秒&#xA;&#x9;log_path = /var/log/ansible.log&#x9;&#x9;#指定一个存储ansible日志的文件（默认不记录日志）&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;inventory 文件&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;不分组&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;IP1&#xA;IP2&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;OR 主机组&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[HOSTGRUPXX]&#xA;IP1&#xA;IP2&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/bin/ansible　　Ansibe AD-Hoc 临时命令执行工具，常用于临时命令的执行&#xA;/usr/bin/ansible-doc 　　Ansible 模块功能查看工具&#xA;/usr/bin/ansible-galaxy　　下载/上传优秀代码或Roles模块 的官网平台，基于网络的&#xA;/usr/bin/ansible-playbook　　Ansible 定制自动化的任务集编排工具&#xA;/usr/bin/ansible-pull　　Ansible远程执行命令的工具，拉取配置而非推送配置（使用较少，海量机器时使用，对运维的架构能力要求较高）&#xA;/usr/bin/ansible-vault　　Ansible 文件加密工具&#xA;/usr/bin/ansible-console　　Ansible基于Linux Consoble界面可与用户交互的命令执行工具&#xA;&#xA;其中，我们比较常用的是/usr/bin/ansible和/usr/bin/ansible-playbook。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;例子&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这个例子非常的简单，就拷贝ssl证书和nginx配置文件到nginx目录下面，然后启动nginx&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
