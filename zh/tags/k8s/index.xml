<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K8s on 飞机模型</title>
    <link>https://www.airplanecraft.com/zh/tags/k8s/</link>
    <description>Recent content in K8s on 飞机模型</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 03 May 2019 10:30:37 +0800</lastBuildDate><atom:link href="https://www.airplanecraft.com/zh/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我们为什么需要K8S</title>
      <link>https://www.airplanecraft.com/zh/posts/why-do-we-need-k8s/</link>
      <pubDate>Fri, 03 May 2019 10:30:37 +0800</pubDate>
      
      <guid>https://www.airplanecraft.com/zh/posts/why-do-we-need-k8s/</guid>
      <description>
        
          
            &lt;h2 id=&#34;我们为什么需要k8s&#34;&gt;我们为什么需要K8S&lt;/h2&gt;
&lt;p&gt;我们用最常用的一个例子LAMP（Linux/Apache/Mysql/PHP or Python or perl）搭建一個負載均均衡的多節點的網站，假如不考慮mysql環節，我們只考慮負載均衡和多節點的問題。&lt;/p&gt;
&lt;h3 id=&#34;1如果我们在本地数据中心进行产品部署的话我们需要那些服务&#34;&gt;1：如果我们在本地数据中心进行产品部署的话,我们需要那些服务&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;负载均衡 LB&lt;/li&gt;
&lt;li&gt;扩容和缩放 auto scaling&lt;/li&gt;
&lt;li&gt;高可用  HA，一個節點挂掉，如果有新的節點自動產生take over他的服務&lt;/li&gt;
&lt;li&gt;日志如何同步到一個中心?&lt;/li&gt;
&lt;li&gt;Docker部署或者裸程序&lt;/li&gt;
&lt;li&gt;反向代理服務&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么问题来了，几乎所有的服务都需要我们自己部署和搭建，我们的基础设施，完全依赖裸的操作系统，我们要全部搭建，举几个最简单的例子：如何决定部署多少个Docker容器？如何让这些容器的服务负载均衡？每个容器里面的日志如何同步？任何一个docker容器服务挂掉该如何处理？ 我们操作系统的优化，硬件和网络高可用性，等等目前这些问题都需要我们在本地数据中心来实现，无论是复杂度还是需要硬件成本和技术都是非常高的。&lt;/p&gt;
&lt;h3 id=&#34;2如果在aws云上我们使用服务&#34;&gt;2：如果在aws云上我们使用服务&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;LB(health check等配置)&lt;/li&gt;
&lt;li&gt;autoscaling&lt;/li&gt;
&lt;li&gt;cloudwatch logs&lt;/li&gt;
&lt;li&gt;创建Lauch configuration&lt;/li&gt;
&lt;li&gt;创建image 里面包含我们应用程序或者包含docker&lt;/li&gt;
&lt;li&gt;日志的同步可以同步到elasticsearch服務&lt;/li&gt;
&lt;li&gt;反向代理(使用lb的或者image裏面自己搭建nginx根據需要)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们发现如果我们使用aws来构建我们的服务的话，这里面有很多成熟的服务我们可以拿来使用，这里面我们需要完成各个服务的配置，如果我们使用alicloud或者azure等各个服务平台的配置都是不一样的，即便我们有devops，我们使用terraform和assible来做devops也需要很多不同的代码，跨平台的移植非常麻煩&lt;/p&gt;
&lt;h3 id=&#34;3-使用k8s&#34;&gt;3. 使用K8s&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;是否需要負載均衡？是，k8s service本身就是負載均衡&lt;/li&gt;
&lt;li&gt;是否需要考慮需要節點的擴容和縮放？是，K8s pod本身就支持autoscaling擴容和縮放&lt;/li&gt;
&lt;li&gt;日志如何同步？可以直接使用K8s的存儲管理，可以不用第三方的服務&lt;/li&gt;
&lt;li&gt;是否支持容器？一直都是以容器為基本單位就行部署的&lt;/li&gt;
&lt;li&gt;系統的可移植性如何?你的程序無論在本地數據中心的K8S還是在各個云服務平臺的k8s上，devops的代碼的改動幾乎沒有多少，完全是跨平臺的。無論是開發者還是devops都可以聚焦於你的業務實現
6.反向代理，直接使用service ingress 就可以很容易解決&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;總之，k8S提供了你需要的完美的一體化的解決方案，所有的這些服務都集成在K8S内部，如果使用一些定制化的k8S平臺，比如openshit還集成了更多的開發和devops的工具在裏面，可以更快的開發和測試和部署，讓我們的用戶效率大大提高。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>k8s使用ingress总结</title>
      <link>https://www.airplanecraft.com/zh/posts/k8s-install-ingress/</link>
      <pubDate>Thu, 03 May 2018 10:30:37 +0800</pubDate>
      
      <guid>https://www.airplanecraft.com/zh/posts/k8s-install-ingress/</guid>
      <description>
        
          
            &lt;h3 id=&#34;安装准备&#34;&gt;安装准备&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Centos7.7 vm 或者真实的物理机三台(master一台,node两台)&lt;/li&gt;
&lt;li&gt;硬件要求2GB ram,最低2CPU，最少32GB 硬盘&lt;/li&gt;
&lt;li&gt;节点之间最好网络互通，如果不考虑安全可以关闭firewalld&lt;/li&gt;
&lt;li&gt;可以访问到外部网络,因为需要网络资源，比如yum源和其他k8s需要的yaml文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;需要安装和配置&#34;&gt;需要安装和配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;yum源配置&lt;/li&gt;
&lt;li&gt;防火墙selinux的关闭与配置&lt;/li&gt;
&lt;li&gt;swap分区配置&lt;/li&gt;
&lt;li&gt;桥接ipv4流量交给iptables&lt;/li&gt;
&lt;li&gt;文件句柄数的限制&lt;/li&gt;
&lt;li&gt;Docker的安装&lt;/li&gt;
&lt;li&gt;Kubeadmin,flannel&lt;/li&gt;
&lt;li&gt;创建deployment,service,pod,ingress,ingress controller,kubernets-dashboard&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;具体安装步骤&#34;&gt;具体安装步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;VM 网络选择bridge模式 master:192.168.25.200 node:192.168.25.187/192.168.25.188&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;防火墙&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  $ systemctl stop firewalld
  $ systemctl disable firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Selinux&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  $ sed -i &amp;#34;s/^SELINUX=enforcing/SELINUX=disabled/g&amp;#34; /etc/selinux/config
  $ sed -i &amp;#34;s/^SELINUX=permissive/SELINUX=disabled/g&amp;#34; /etc/selinux/config
  $ setenforce 0
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭swap&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  swapoff -a 
  sed -i &amp;#39;s/.*swap.*/#&amp;amp;/&amp;#39; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络转发&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  cat &amp;gt; /etc/sysctl.d/k8s.conf &amp;lt;&amp;lt; EOF
  net.bridge.bridge-nf-call-ip6tables = 1
  net.bridge.bridge-nf-call-iptables = 1
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件句柄&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
